services:
  postgresdb:
    image: postgres:16-alpine
    container_name: postgresdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - deploy_bmtsys_network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 5s

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8081:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_DEFAULT_SERVER=postgresdb
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - deploy_bmtsys_network
  
  backend:
    build:
      context: .
      dockerfile: src/BadmintonSystem.API/Dockerfile
    container_name: bmtsys-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    expose:
      - 5000
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
    command: ["dotnet", "BadmintonSystem.API.dll", "--urls", "http://*:5000"]
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - deploy_bmtsys_network

networks:
  deploy_bmtsys_network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:   